module axi4_stream_video_processing #(
    parameter DATA_WIDTH = 24 // Assuming RGB888 format
)(
    input wire clk,
    input wire reset_n,

    // AXI4-Stream Slave Interface (Input Stream)
    input wire [DATA_WIDTH-1:0] s_axis_tdata,
    input wire                  s_axis_tvalid,
    output wire                 s_axis_tready,
    input wire                  s_axis_tlast,

    // AXI4-Stream Master Interface (Output Stream)
    output wire [DATA_WIDTH-1:0] m_axis_tdata,
    output wire                  m_axis_tvalid,
    input wire                   m_axis_tready,
    output wire                  m_axis_tlast
);

reg [DATA_WIDTH-1:0] data_reg;
reg valid_reg, last_reg;

assign s_axis_tready = m_axis_tready;

// Grayscale conversion
wire [DATA_WIDTH-1:0] gray_data;
grayscale_conversion #(DATA_WIDTH) u_grayscale_conversion (
    .rgb_data(s_axis_tdata),
    .gray_data(gray_data)
);

always @(posedge clk or negedge reset_n) begin
    if (!reset_n) begin
        valid_reg <= 0;
        last_reg <= 0;
    end else begin
        if (s_axis_tvalid && s_axis_tready) begin
            data_reg <= gray_data;
            valid_reg <= 1;
            last_reg <= s_axis_tlast;
        end else if (m_axis_tready) begin
            valid_reg <= 0;
        end
    end
end

assign m_axis_tdata = data_reg;
assign m_axis_tvalid = valid_reg;
assign m_axis_tlast = last_reg;

endmodule
